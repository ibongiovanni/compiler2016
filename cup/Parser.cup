package Example;

import java_cup.runtime.*;

parser code {:
    public static void main(String args[]) throws Exception {
		ComplexSymbolFactory sf = new ComplexSymbolFactory();
		if (args.length==0) {
			new Parser(new Scanner(System.in,sf),sf).parse();
		}
		else {
			new Parser(new Scanner(new java.io.FileInputStream(args[0]),sf),sf).parse();
		}
    }
:}

/* Terminals (tokens returned by the scanner). */
terminal            SEMI, PLUS, MINUS, TIMES, DIVIDE, LPAREN, RPAREN, LBRACE, RBRACE;

terminal 			BOOL, BREAK, CLASS, CONTINUE, ELSE, FLOAT, FOR, IF, INTEGER, RETURN, VOID, WHILE, EXTERN;
terminal Boolean	BOOL_LIT;
terminal Integer    NUMBER;        // our scanner provides numbers as integers
terminal Object		ID;

/* Non terminals */
non terminal            expr_list;
non terminal 			expr;      // used to store evaluated subexpressions

non terminal 	program;
non terminal 	class_dec;

/* Precedences */
precedence left PLUS, MINUS;
precedence left TIMES;

/* The grammar rules */

/*goal*/
program 	::=  program class_dec	{:System.out.println("More than one class");:}	//More than one class 
			|	 class_dec			{:System.out.println("One single class");:}	//One single class
			;

class_dec	::=  CLASS ID LBRACE RBRACE
			//|	 CLASS ID LBRACE RBRACE
			;

